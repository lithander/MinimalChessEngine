using System;

namespace MinimalChess
{
    public class Evaluation
    {
        public static int LostValue => -9999;

        private static int PieceTableIndex(Piece piece) => ((int)piece >> 2) - 1;

        //a black piece has 2nd bit set, white has not and square ^ 56 flips the file so it works for black
        private static int SquareTableIndex(int square, Piece piece) => square ^ (28 * ((int)piece & 2));

        public static int Evaluate(Board board)
        {
            int midGame = 0;
            int endGame = 0;
            int phase = 0;
            for (int i = 0; i < 64; i++)
            {
                Piece piece = board[i];
                if (piece == Piece.None)
                    continue;
                Color color = Pieces.GetColor(piece);
                int pieceIndex = PieceTableIndex(piece);
                int squareIndex = SquareTableIndex(i, piece);
                phase += PhaseValues[pieceIndex];
                midGame += (int)color * MidgameTables[pieceIndex, squareIndex];
                endGame += (int)color * EndgameTables[pieceIndex, squareIndex];
            }

            double factor = Linstep(518, 6192, phase);
            double score = factor * midGame + (1 - factor) * endGame;
            return (int)score;
        }

        public static double Linstep(double edge0, double edge1, double v)
        {
            return Math.Min(1, Math.Max(0, (v - edge0) / (edge1 - edge0)));
        }

        static int[] PhaseValues = new int[6] { 0, 337, 365, 477, 1025, 0 };

        static int[,] MidgameTables = new int[6, 64]{
        {  //PAWN
           100,   100,   100,   100,   100,   100,   100,   100,
           220,   250,   135,   220,   255,   275,   190,   125,
           105,   115,   125,   130,   155,   165,   125,    90,
            80,   105,    95,   110,   110,   100,   105,    65,
            70,    90,    80,    95,   100,    85,    90,    65,
            70,    85,    80,    75,    85,    80,   115,    75,
            60,    90,    65,    60,    65,   100,   115,    65,
           100,   100,   100,   100,   100,   100,   100,   100,
        },
        {  //KNIGHT MG
           105,   175,   240,   230,   325,   170,   245,   170,
           225,   250,   370,   315,   325,   350,   305,   290,
           240,   365,   335,   360,   375,   415,   375,   345,
           295,   320,   320,   355,   340,   365,   320,   315,
           290,   310,   315,   315,   330,   325,   320,   295,
           280,   295,   315,   320,   320,   320,   325,   290,
           275,   255,   295,   300,   305,   320,   300,   290,
           230,   280,   255,   270,   290,   280,   285,   285,
        },
        {  //BISHOP MG
           255,   300,   215,   225,   270,   275,   335,   325,
           280,   340,   315,   295,   355,   385,   350,   290,
           310,   345,   375,   355,   355,   355,   360,   325,
           325,   330,   350,   370,   355,   370,   335,   325,
           325,   340,   340,   345,   360,   335,   335,   330,
           330,   340,   340,   345,   335,   350,   340,   335,
           335,   340,   345,   325,   335,   350,   355,   330,
           315,   330,   310,   320,   325,   315,   300,   310,
        },
        {  //ROOK MG
           560,   615,   525,   535,   545,   505,   475,   535,
           510,   510,   560,   515,   570,   550,   490,   500,
           495,   530,   515,   520,   500,   545,   540,   500,
           470,   505,   505,   530,   525,   520,   485,   485,
           475,   490,   495,   490,   500,   485,   500,   475,
           465,   485,   485,   485,   495,   495,   495,   475,
           460,   490,   485,   490,   495,   505,   490,   435,
           480,   490,   495,   505,   505,   495,   470,   475,
        },
        {  //QUEEN MG
           845,   875,   905,   915,  1025,  1035,   885,   890,
           875,   860,   910,   900,   885,   950,   925,   935,
           890,   895,   910,   915,   935,   950,   940,   945,
           880,   880,   895,   895,   905,   920,   905,   905,
           895,   885,   895,   895,   905,   905,   915,   905,
           890,   905,   900,   900,   900,   905,   920,   910,
           875,   895,   910,   905,   910,   915,   905,   895,
           910,   890,   895,   910,   890,   880,   885,   880,
        },
        {  //KING MG
             0,     0,     0,     0,     0,     0,     0,     0,
             0,     0,     0,     0,     0,     0,     0,     0,
           -25,   -25,     0,     0,     0,     0,     0,   -25,
           -25,   -25,   -25,    25,   -25,    25,   -25,   -25,
           -25,   -25,   -25,   -25,   -25,   -25,   -25,   -25,
             0,   -20,   -25,   -25,   -25,   -25,   -20,   -25,
             5,    10,   -15,   -75,   -50,   -10,    25,    20,
           -20,    45,    20,   -40,    10,   -15,    35,    30,
        }
        };

        static int[,] EndgameTables = new int[6, 64]{
        {  //PAWN EG
           100,   100,   100,   100,   100,   100,   100,   100,
           255,   255,   225,   215,   220,   220,   235,   250,
           170,   175,   165,   150,   145,   140,   165,   160,
           115,   110,   105,   100,    95,    95,   105,   100,
            95,   100,    90,    90,    85,    85,    90,    85,
            90,    95,    85,    90,    90,    85,    90,    80,
            95,   100,    90,    90,    90,    90,    95,    80,
           100,   100,   100,   100,   100,   100,   100,   100,
        },
        {  //KNIGHT EG
           215,   235,   265,   245,   250,   240,   225,   190,
           245,   260,   265,   275,   270,   260,   255,   235,
           250,   270,   290,   290,   280,   285,   265,   245,
           265,   275,   295,   295,   290,   295,   275,   260,
           255,   270,   290,   295,   290,   290,   275,   255,
           255,   275,   275,   290,   285,   275,   260,   255,
           240,   255,   270,   275,   275,   265,   260,   230,
           240,   240,   250,   260,   260,   260,   245,   225,
        },
        {  //BISHOP EG
           275,   275,   275,   285,   285,   285,   280,   275,
           280,   290,   295,   280,   295,   290,   290,   280,
           290,   290,   300,   295,   290,   305,   295,   290,
           290,   295,   305,   305,   305,   305,   290,   290,
           285,   295,   300,   310,   300,   300,   290,   290,
           285,   290,   300,   300,   300,   295,   290,   280,
           280,   285,   290,   290,   295,   290,   290,   275,
           275,   285,   285,   285,   285,   275,   280,   280,
        },
        {  //ROOK EG
           500,   500,   505,   505,   505,   500,   500,   500,
           500,   500,   505,   505,   495,   500,   495,   495,
           490,   495,   495,   495,   495,   490,   495,   490,
           485,   490,   500,   495,   495,   495,   485,   485,
           485,   490,   490,   490,   485,   485,   480,   475,
           480,   485,   480,   485,   480,   480,   480,   475,
           480,   485,   485,   490,   480,   485,   480,   475,
           485,   485,   490,   490,   490,   480,   480,   475,
        },
        {  //QUEEN EG
           910,   925,   940,   935,   935,   930,   925,   935,
           900,   910,   925,   930,   930,   935,   925,   925,
           900,   920,   920,   945,   935,   925,   925,   915,
           915,   925,   930,   935,   935,   930,   940,   925,
           905,   920,   925,   940,   930,   935,   925,   915,
           900,   915,   930,   930,   925,   925,   910,   915,
           905,   915,   925,   915,   930,   915,   905,   875,
           905,   930,   905,   915,   915,   910,   905,   895,
        },
        {  //KING EG
           -60,   -25,   -10,   -15,    -5,    10,    10,   -10,
            -5,    15,    15,    15,    15,    30,    20,    10,
            10,    20,    20,    15,    20,    40,    40,    10,
            -5,    20,    20,    25,    20,    30,    25,     5,
           -20,     0,    15,    20,    20,    20,    10,   -10,
           -15,     0,    10,    15,    20,    15,    10,    -5,
           -20,    -5,     5,     5,    10,     5,     0,   -10,
           -45,   -25,   -15,   -15,   -10,   -10,   -15,   -35,
        }};
    }
}
